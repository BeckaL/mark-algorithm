import models.Node

object ExampleData {
  val nodes = List(
    Node(linksTo = Set(21), id = 57, false),
    Node(linksTo = Set(), id = 2, inRootScope = false),
    Node(linksTo = Set(2, 13, 7), id = 3, inRootScope = false),
    Node(linksTo = Set(15, 3, 12, 10), id = 63, inRootScope = true),
    Node(linksTo = Set(14, 62, 58), id = 5, true),
    Node(linksTo = Set(12), id = 6, inRootScope = false),
    Node(linksTo = Set(), id = 7, inRootScope = false),
    Node(linksTo = Set(19), id = 8, false),
    Node(linksTo = Set(16), id = 9, false),
    Node(linksTo = Set(), id = 10, inRootScope = false),
    Node(linksTo = Set(36), id = 11, inRootScope = false),
    Node(linksTo = Set(), id = 12, inRootScope = false),
    Node(linksTo = Set(24), id = 13, inRootScope = false),
    Node(linksTo = Set(5, 26, 23), id = 14, false),
    Node(linksTo = Set(25), id = 15, inRootScope = false),
    Node(linksTo = Set(20), id = 16, false),
    Node(linksTo = Set(11), id = 17, inRootScope = false),
    Node(linksTo = Set(2), id = 18, inRootScope = false),
    Node(linksTo = Set(22, 23, 8), id = 19, false),
    Node(linksTo = Set(), id = 20, false),
    Node(linksTo = Set(57), id = 21, false),
    Node(linksTo = Set(23, 19), id = 22, false),
    Node(linksTo = Set(14, 26, 22), id = 23, false),
    Node(linksTo = Set(), id = 24, inRootScope = false),
    Node(linksTo = Set(11, 18), id = 25, inRootScope =  true),
    Node(linksTo = Set(5, 23), id = 26, false),
    Node(linksTo = Set(18), id = 27, inRootScope = false),
    Node(linksTo = Set(), id = 28, inRootScope = false),
    Node(linksTo = Set(), id = 29, inRootScope = false),
    Node(linksTo = Set(25), id = 30, inRootScope = false),
    Node(linksTo = Set(25), id = 31, inRootScope = false),
    Node(linksTo = Set(3), id = 32, inRootScope = false),
    Node(linksTo = Set(53), id = 33, false),
    Node(linksTo = Set(), id = 34, inRootScope = false),
    Node(linksTo = Set(34, 45, 39), id = 35, inRootScope = false),
    Node(linksTo = Set(47, 35, 47, 42), id = 36, inRootScope = false),
    Node(linksTo = Set(46), id = 37, true),
    Node(linksTo = Set(44), id = 38, inRootScope = false),
    Node(linksTo = Set(), id = 39, inRootScope = false),
    Node(linksTo = Set(51), id = 40, false),
    Node(linksTo = Set(48), id = 41, false),
    Node(linksTo = Set(), id = 42, inRootScope = false),
    Node(linksTo = Set(), id = 43, inRootScope = false),
    Node(linksTo = Set(), id = 44, inRootScope = false),
    Node(linksTo = Set(56), id = 45, inRootScope = false),
    Node(linksTo = Set(46, 58, 55), id = 46, false),
    Node(linksTo = Set(1), id = 47, inRootScope = false),
    Node(linksTo = Set(52), id = 48, false),
    Node(linksTo = Set(43), id = 49, inRootScope = false),
    Node(linksTo = Set(34), id = 50, inRootScope = false),
    Node(linksTo = Set(54, 55, 40), id = 51, false),
    Node(linksTo = Set(), id = 52, false),
    Node(linksTo = Set(33), id = 53, false),
    Node(linksTo = Set(55, 51), id = 54, false),
    Node(linksTo = Set(46, 58, 54), id = 55, false),
    Node(linksTo = Set(), id = 56, inRootScope = false),
    Node(linksTo = Set(43, 50), id = 1, inRootScope =  true),
    Node(linksTo = Set(37, 55), id = 58, false),
    Node(linksTo = Set(50), id = 59, inRootScope = false),
    Node(linksTo = Set(), id = 60, inRootScope = false),
    Node(linksTo = Set(), id = 61, inRootScope = false),
    Node(linksTo = Set(1), id = 62, inRootScope = false),
    Node(linksTo = Set(1), id = 4, inRootScope = false),
    Node(linksTo = Set(35), id = 64, inRootScope = false),
  )

  //TODO just specify edges instead and get something to build the nodes?

  def go() =
    MarkAlgorithm.getNodeIdsToFree(nodes)
}
